# This workflow is named 'Release Workflow' and will be triggered manually
name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: 'New version to set (e.g., 1.0.1, 2.0.0-RC1)'
        default: 2.12-RC1
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  workflows: write

# Define a single job named 'release'
jobs:
  release:
    runs-on: ubuntu-latest

    # Protection rules for this environment are set in the repository settings.
    environment: maven

    # Define the steps for the 'release' job
    steps:
    - uses: actions/checkout@v4
    - name: Set up Java and Maven
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        server-id: central
        server-username: ${{ secrets.MAVEN_USERNAME }}
        server-password: ${{ secrets.MAVEN_PASSWORD }}
        # GPG Key setup for signing artifacts
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
        gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

    - name: Maven cache
      uses: actions/cache@v4
      env:
        cache-name: maven-cache
      with:
        path: ~/.m2
        key: build-${{ env.cache-name }}

    - name: Bump version in pom.xml
      run: mvn versions:set -DnewVersion=${{ github.event.inputs.new_version }} -DgenerateBackupPoms=false

    # - name: Deploy JAR to Maven Central
    #   run: mvn clean deploy -Pcentral
    - name: Update workflow input description with new version
      # WARNING: This step modifies the workflow file itself. It is highly sensitive to
      # the exact formatting of the YAML and relies on specific 'sed' patterns.
      # Any slight change in indentation or phrasing of the original description
      # might cause this step to fail or corrupt the workflow file.
      run: |
        NEW_VERSION_FOR_DESC="${{ github.event.inputs.new_version }}"
        WORKFLOW_FILE="${{ github.workspace }}/.github/workflows/release.yml" # Get current workflow file name

        # Escape forward slashes in the version string for sed
        ESCAPED_VERSION=$(echo "$NEW_VERSION_FOR_DESC" | sed 's/\//\\\//g')

        # Use sed to find and replace the description line.
        sed -i "/^[[:space:]]*new_version:/,/^[[:space:]]*type:/s/^[[:space:]]*description: .*/      description: 'Set version to deploy, Last deployed version: ${ESCAPED_VERSION}'/" "${WORKFLOW_FILE}"
      shell: bash # Ensure bash is used for sed

      # Push the changes back to the 'master' branch.
    - name: Commit and push version change
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Bump version to ${{ github.event.inputs.new_version }}"
        git push
