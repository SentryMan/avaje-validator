name: üöÄ Create Automated PR

on:
  workflow_dispatch:
    inputs:
      pr_title:
        description: 'Title for the new Pull Request'
        required: false
        default: 'Automated PR: Update timestamp'
      pr_body:
        description: 'Body for the new Pull Request'
        required: false
        default: 'This PR was automatically generated by a GitHub Action to demonstrate PR creation.'

jobs:
  create-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push changes
      pull-requests: write # Required to create a PR

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4
        with:
          # Important: Fetch all history for the create-pull-request action to work correctly
          fetch-depth: 0

      - name: ‚öôÔ∏è Configure Git user
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"

      - name: üìù Make a change (e.g., add a timestamp file)
        run: |
          TIMESTAMP=$(date +%Y-%m-%d-%H-%M-%S)
          echo "Current timestamp: $TIMESTAMP" > "timestamp-$TIMESTAMP.txt"
          echo "Added timestamp-$TIMESTAMP.txt"

      - name: ‚ûï Add and commit changes
        run: |
          git add .
          git commit -m "feat: Add new timestamp file ($TIMESTAMP)"
          echo "Changes committed."

      - name: ‚¨ÜÔ∏è Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # The default GITHUB_TOKEN has necessary permissions
          commit-message: 'Automated: Add timestamp file'
          title: ${{ github.event.inputs.pr_title }}
          body: ${{ github.event.inputs.pr_body }}
          branch: automated-timestamp-update-${{ github.run_id }} # Unique branch name
          base: main # Or 'master' if that's your default branch
          delete-branch: true # Delete the branch after the PR is merged
          labels: |
            automated-pr
            enhancement
          assignees: ${{ github.actor }} # Assign the user who triggered the workflow (optional)
          reviewers: ${{ github.actor }} # Request review from the user who triggered the workflow (optional)
